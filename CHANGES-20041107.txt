0) Fix bug found by AlphaWolf (mfs_stream faults when writes to stdout fail).

1) Merge in changes from JBuehl to optional format dates in human
readable form in mfs_dumpobj.  I added code to determine the timezone
offset when run on the tivo, but this code only works on TiVo software
versions >= 4.0.  Only older software versions you'll see times in
GMT.

2) merge all the various "export_file" functions into a single
function shared by all.

3) Add new options to mfs_import and mfs_export:

        -c <count>       number of bytes (defaults to size of fsid)
        -s <start>       start offset, in bytes (defaults to 0)
	-n <nbufs>	 number of sectors to use for buffering (default 256)
	-p <priority>    Priority  0: ts; 1-99 RT FIFO
	-t <ms>		 Rate control (throttle)
                              -'ve  : no delay (default)
                              0     : sched_yield() between chunks
                              +'ve  : # of ms to delay between chunks
	-v		 Verbose.  Progress messages on stderr

Note that the starting offset and count can be on arbitrary byte
boundaries now (not restricted to sector alignment.)

4) Add a patch to mfs_ftp (mfs_ftp.patch) that can be applied to
mfs_ftp.tcl to use the new features of mfs_import.  This gets mfs_ftp
out of the middle on inserts, allowing mfs_import to use the socket
directly.  The result is faster insertions and lower CPU usage during
insertions.

Note that with this patch, the mfs_ftp.tcl code uses mfs_import, not
mfs_stdinsert.  Also, with this patch, mfs_ftp *requires* this new
version of mfs_import.  It won't work with an older version.

To apply this patch, go to the directory where mos_ftp.tuck lives, and
apply via: "patch < MFA_ftp.patch".  For some reason the busybox patch
on my tivo doesn't seem to like this patch format (created with diff
-u).  I suggested patching on the linux side (or with cygwin patch
under windows).

** PLEASE ** Do not bother Riley if you try this patch and it has
             problems.  Please report problems to me.

--Jamie
